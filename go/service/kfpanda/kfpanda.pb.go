// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: protos/service/kfpanda/kfpanda.proto

package kfpanda

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecordType int32

const (
	RecordType_RECORD_TYPE_UNSPECIFIED RecordType = 0
	RecordType_RECORD_TYPE_HTTP        RecordType = 1
	RecordType_RECORD_TYPE_GRPC        RecordType = 2
)

// Enum value maps for RecordType.
var (
	RecordType_name = map[int32]string{
		0: "RECORD_TYPE_UNSPECIFIED",
		1: "RECORD_TYPE_HTTP",
		2: "RECORD_TYPE_GRPC",
	}
	RecordType_value = map[string]int32{
		"RECORD_TYPE_UNSPECIFIED": 0,
		"RECORD_TYPE_HTTP":        1,
		"RECORD_TYPE_GRPC":        2,
	}
)

func (x RecordType) Enum() *RecordType {
	p := new(RecordType)
	*p = x
	return p
}

func (x RecordType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RecordType) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_service_kfpanda_kfpanda_proto_enumTypes[0].Descriptor()
}

func (RecordType) Type() protoreflect.EnumType {
	return &file_protos_service_kfpanda_kfpanda_proto_enumTypes[0]
}

func (x RecordType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RecordType.Descriptor instead.
func (RecordType) EnumDescriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{0}
}

type LogLevel int32

const (
	LogLevel_LOG_LEVEL_UNSPECIFIED LogLevel = 0
	LogLevel_LOG_LEVEL_INFO        LogLevel = 1
	LogLevel_LOG_LEVEL_WARN        LogLevel = 2
	LogLevel_LOG_LEVEL_ERROR       LogLevel = 3
	LogLevel_LOG_LEVEL_FATAL       LogLevel = 4
	LogLevel_LOG_LEVEL_DEBUG       LogLevel = 5
)

// Enum value maps for LogLevel.
var (
	LogLevel_name = map[int32]string{
		0: "LOG_LEVEL_UNSPECIFIED",
		1: "LOG_LEVEL_INFO",
		2: "LOG_LEVEL_WARN",
		3: "LOG_LEVEL_ERROR",
		4: "LOG_LEVEL_FATAL",
		5: "LOG_LEVEL_DEBUG",
	}
	LogLevel_value = map[string]int32{
		"LOG_LEVEL_UNSPECIFIED": 0,
		"LOG_LEVEL_INFO":        1,
		"LOG_LEVEL_WARN":        2,
		"LOG_LEVEL_ERROR":       3,
		"LOG_LEVEL_FATAL":       4,
		"LOG_LEVEL_DEBUG":       5,
	}
)

func (x LogLevel) Enum() *LogLevel {
	p := new(LogLevel)
	*p = x
	return p
}

func (x LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_protos_service_kfpanda_kfpanda_proto_enumTypes[1].Descriptor()
}

func (LogLevel) Type() protoreflect.EnumType {
	return &file_protos_service_kfpanda_kfpanda_proto_enumTypes[1]
}

func (x LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogLevel.Descriptor instead.
func (LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{1}
}

type URI struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Full          string                 `protobuf:"bytes,1,opt,name=full,proto3" json:"full,omitempty"`
	Schema        string                 `protobuf:"bytes,100,opt,name=schema,proto3" json:"schema,omitempty"`
	Host          string                 `protobuf:"bytes,101,opt,name=host,proto3" json:"host,omitempty"`
	Port          int32                  `protobuf:"varint,102,opt,name=port,proto3" json:"port,omitempty"`
	Path          string                 `protobuf:"bytes,103,opt,name=path,proto3" json:"path,omitempty"`
	Query         string                 `protobuf:"bytes,104,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *URI) Reset() {
	*x = URI{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *URI) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URI) ProtoMessage() {}

func (x *URI) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URI.ProtoReflect.Descriptor instead.
func (*URI) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{0}
}

func (x *URI) GetFull() string {
	if x != nil {
		return x.Full
	}
	return ""
}

func (x *URI) GetSchema() string {
	if x != nil {
		return x.Schema
	}
	return ""
}

func (x *URI) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *URI) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *URI) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *URI) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type RecordRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	RequestId string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// reqeust timestamp in millisecond
	// default: current timestamp if not set
	TimestampMs   int64      `protobuf:"varint,2,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
	Uri           *URI       `protobuf:"bytes,3,opt,name=uri,proto3" json:"uri,omitempty"`
	Service       string     `protobuf:"bytes,100,opt,name=service,proto3" json:"service,omitempty"`
	Type          RecordType `protobuf:"varint,101,opt,name=type,proto3,enum=kfpanda.RecordType" json:"type,omitempty"`
	Data          []byte     `protobuf:"bytes,102,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordRequest) Reset() {
	*x = RecordRequest{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordRequest) ProtoMessage() {}

func (x *RecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordRequest.ProtoReflect.Descriptor instead.
func (*RecordRequest) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{1}
}

func (x *RecordRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *RecordRequest) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *RecordRequest) GetUri() *URI {
	if x != nil {
		return x.Uri
	}
	return nil
}

func (x *RecordRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *RecordRequest) GetType() RecordType {
	if x != nil {
		return x.Type
	}
	return RecordType_RECORD_TYPE_UNSPECIFIED
}

func (x *RecordRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type RecordResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// code: indicte the processing result
	// 0: ok, failed otherwise
	Code          int32  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecordResponse) Reset() {
	*x = RecordResponse{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecordResponse) ProtoMessage() {}

func (x *RecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecordResponse.ProtoReflect.Descriptor instead.
func (*RecordResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{2}
}

func (x *RecordResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RecordResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReplayRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Service       string                 `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Option        *ReplayRequest_Option  `protobuf:"bytes,3,opt,name=option,proto3" json:"option,omitempty"`
	Target        *URI                   `protobuf:"bytes,100,opt,name=target,proto3" json:"target,omitempty"`
	TargetCompare *URI                   `protobuf:"bytes,101,opt,name=target_compare,json=targetCompare,proto3" json:"target_compare,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplayRequest) Reset() {
	*x = ReplayRequest{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayRequest) ProtoMessage() {}

func (x *ReplayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayRequest.ProtoReflect.Descriptor instead.
func (*ReplayRequest) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{3}
}

func (x *ReplayRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *ReplayRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *ReplayRequest) GetOption() *ReplayRequest_Option {
	if x != nil {
		return x.Option
	}
	return nil
}

func (x *ReplayRequest) GetTarget() *URI {
	if x != nil {
		return x.Target
	}
	return nil
}

func (x *ReplayRequest) GetTargetCompare() *URI {
	if x != nil {
		return x.TargetCompare
	}
	return nil
}

type ReplayResponse struct {
	state         protoimpl.MessageState                      `protogen:"open.v1"`
	Code          int32                                       `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                                      `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	SuccessCount  int32                                       `protobuf:"varint,100,opt,name=success_count,json=successCount,proto3" json:"success_count,omitempty"`
	FailedCount   int32                                       `protobuf:"varint,101,opt,name=failed_count,json=failedCount,proto3" json:"failed_count,omitempty"`
	Responses     []*ReplayResponse_ServiceResponse           `protobuf:"bytes,102,rep,name=responses,proto3" json:"responses,omitempty"`
	Results       []*ReplayResponse_ServiceResponseComparable `protobuf:"bytes,103,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplayResponse) Reset() {
	*x = ReplayResponse{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayResponse) ProtoMessage() {}

func (x *ReplayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayResponse.ProtoReflect.Descriptor instead.
func (*ReplayResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{4}
}

func (x *ReplayResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ReplayResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReplayResponse) GetSuccessCount() int32 {
	if x != nil {
		return x.SuccessCount
	}
	return 0
}

func (x *ReplayResponse) GetFailedCount() int32 {
	if x != nil {
		return x.FailedCount
	}
	return 0
}

func (x *ReplayResponse) GetResponses() []*ReplayResponse_ServiceResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

func (x *ReplayResponse) GetResults() []*ReplayResponse_ServiceResponseComparable {
	if x != nil {
		return x.Results
	}
	return nil
}

type SampleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Service       string                 `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SampleRequest) Reset() {
	*x = SampleRequest{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SampleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleRequest) ProtoMessage() {}

func (x *SampleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleRequest.ProtoReflect.Descriptor instead.
func (*SampleRequest) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{5}
}

func (x *SampleRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *SampleRequest) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type SampleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Code          int32                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Data          [][]byte               `protobuf:"bytes,4,rep,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SampleResponse) Reset() {
	*x = SampleResponse{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SampleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SampleResponse) ProtoMessage() {}

func (x *SampleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SampleResponse.ProtoReflect.Descriptor instead.
func (*SampleResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{6}
}

func (x *SampleResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SampleResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SampleResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SampleResponse) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type LogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int32                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogResponse) Reset() {
	*x = LogResponse{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogResponse) ProtoMessage() {}

func (x *LogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogResponse.ProtoReflect.Descriptor instead.
func (*LogResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{7}
}

func (x *LogResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *LogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	TimestampMs   int64                  `protobuf:"varint,2,opt,name=timestamp_ms,json=timestampMs,proto3" json:"timestamp_ms,omitempty"`
	Service       string                 `protobuf:"bytes,3,opt,name=service,proto3" json:"service,omitempty"`
	LogName       string                 `protobuf:"bytes,4,opt,name=log_name,json=logName,proto3" json:"log_name,omitempty"`
	LogLevel      LogLevel               `protobuf:"varint,5,opt,name=log_level,json=logLevel,proto3,enum=kfpanda.LogLevel" json:"log_level,omitempty"`
	Message       string                 `protobuf:"bytes,6,opt,name=message,proto3" json:"message,omitempty"`
	File          string                 `protobuf:"bytes,50,opt,name=file,proto3" json:"file,omitempty"`
	Line          int32                  `protobuf:"varint,51,opt,name=line,proto3" json:"line,omitempty"`
	Function      string                 `protobuf:"bytes,52,opt,name=function,proto3" json:"function,omitempty"`
	Host          string                 `protobuf:"bytes,100,opt,name=host,proto3" json:"host,omitempty"`
	Environment   string                 `protobuf:"bytes,101,opt,name=environment,proto3" json:"environment,omitempty"`
	Region        string                 `protobuf:"bytes,102,opt,name=region,proto3" json:"region,omitempty"`
	Cluster       string                 `protobuf:"bytes,103,opt,name=cluster,proto3" json:"cluster,omitempty"`
	Version       string                 `protobuf:"bytes,104,opt,name=version,proto3" json:"version,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,200,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Extra         string                 `protobuf:"bytes,201,opt,name=extra,proto3" json:"extra,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{8}
}

func (x *LogRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *LogRequest) GetTimestampMs() int64 {
	if x != nil {
		return x.TimestampMs
	}
	return 0
}

func (x *LogRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

func (x *LogRequest) GetLogName() string {
	if x != nil {
		return x.LogName
	}
	return ""
}

func (x *LogRequest) GetLogLevel() LogLevel {
	if x != nil {
		return x.LogLevel
	}
	return LogLevel_LOG_LEVEL_UNSPECIFIED
}

func (x *LogRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogRequest) GetFile() string {
	if x != nil {
		return x.File
	}
	return ""
}

func (x *LogRequest) GetLine() int32 {
	if x != nil {
		return x.Line
	}
	return 0
}

func (x *LogRequest) GetFunction() string {
	if x != nil {
		return x.Function
	}
	return ""
}

func (x *LogRequest) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *LogRequest) GetEnvironment() string {
	if x != nil {
		return x.Environment
	}
	return ""
}

func (x *LogRequest) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *LogRequest) GetCluster() string {
	if x != nil {
		return x.Cluster
	}
	return ""
}

func (x *LogRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *LogRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *LogRequest) GetExtra() string {
	if x != nil {
		return x.Extra
	}
	return ""
}

type HttpRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpRequest) Reset() {
	*x = HttpRequest{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpRequest) ProtoMessage() {}

func (x *HttpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpRequest.ProtoReflect.Descriptor instead.
func (*HttpRequest) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{9}
}

type HttpResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HttpResponse) Reset() {
	*x = HttpResponse{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HttpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpResponse) ProtoMessage() {}

func (x *HttpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpResponse.ProtoReflect.Descriptor instead.
func (*HttpResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{10}
}

type EchoMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EchoMessage) Reset() {
	*x = EchoMessage{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EchoMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoMessage) ProtoMessage() {}

func (x *EchoMessage) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoMessage.ProtoReflect.Descriptor instead.
func (*EchoMessage) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{11}
}

func (x *EchoMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ReplayRequest_Option struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         int32                  `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	TimeoutMs     int32                  `protobuf:"varint,2,opt,name=timeout_ms,json=timeoutMs,proto3" json:"timeout_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplayRequest_Option) Reset() {
	*x = ReplayRequest_Option{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplayRequest_Option) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayRequest_Option) ProtoMessage() {}

func (x *ReplayRequest_Option) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayRequest_Option.ProtoReflect.Descriptor instead.
func (*ReplayRequest_Option) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{3, 0}
}

func (x *ReplayRequest_Option) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReplayRequest_Option) GetTimeoutMs() int32 {
	if x != nil {
		return x.TimeoutMs
	}
	return 0
}

type ReplayResponse_ServiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Body          []byte                 `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Type          RecordType             `protobuf:"varint,3,opt,name=type,proto3,enum=kfpanda.RecordType" json:"type,omitempty"`
	TypeStr       string                 `protobuf:"bytes,4,opt,name=type_str,json=typeStr,proto3" json:"type_str,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplayResponse_ServiceResponse) Reset() {
	*x = ReplayResponse_ServiceResponse{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplayResponse_ServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayResponse_ServiceResponse) ProtoMessage() {}

func (x *ReplayResponse_ServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayResponse_ServiceResponse.ProtoReflect.Descriptor instead.
func (*ReplayResponse_ServiceResponse) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{4, 0}
}

func (x *ReplayResponse_ServiceResponse) GetBody() []byte {
	if x != nil {
		return x.Body
	}
	return nil
}

func (x *ReplayResponse_ServiceResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ReplayResponse_ServiceResponse) GetType() RecordType {
	if x != nil {
		return x.Type
	}
	return RecordType_RECORD_TYPE_UNSPECIFIED
}

func (x *ReplayResponse_ServiceResponse) GetTypeStr() string {
	if x != nil {
		return x.TypeStr
	}
	return ""
}

type ReplayResponse_ServiceResponseComparable struct {
	state         protoimpl.MessageState          `protogen:"open.v1"`
	Base          *ReplayResponse_ServiceResponse `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Compare       *ReplayResponse_ServiceResponse `protobuf:"bytes,2,opt,name=compare,proto3" json:"compare,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReplayResponse_ServiceResponseComparable) Reset() {
	*x = ReplayResponse_ServiceResponseComparable{}
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReplayResponse_ServiceResponseComparable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayResponse_ServiceResponseComparable) ProtoMessage() {}

func (x *ReplayResponse_ServiceResponseComparable) ProtoReflect() protoreflect.Message {
	mi := &file_protos_service_kfpanda_kfpanda_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayResponse_ServiceResponseComparable.ProtoReflect.Descriptor instead.
func (*ReplayResponse_ServiceResponseComparable) Descriptor() ([]byte, []int) {
	return file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP(), []int{4, 1}
}

func (x *ReplayResponse_ServiceResponseComparable) GetBase() *ReplayResponse_ServiceResponse {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ReplayResponse_ServiceResponseComparable) GetCompare() *ReplayResponse_ServiceResponse {
	if x != nil {
		return x.Compare
	}
	return nil
}

var File_protos_service_kfpanda_kfpanda_proto protoreflect.FileDescriptor

const file_protos_service_kfpanda_kfpanda_proto_rawDesc = "" +
	"\n" +
	"$protos/service/kfpanda/kfpanda.proto\x12\akfpanda\"\x83\x01\n" +
	"\x03URI\x12\x12\n" +
	"\x04full\x18\x01 \x01(\tR\x04full\x12\x16\n" +
	"\x06schema\x18d \x01(\tR\x06schema\x12\x12\n" +
	"\x04host\x18e \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18f \x01(\x05R\x04port\x12\x12\n" +
	"\x04path\x18g \x01(\tR\x04path\x12\x14\n" +
	"\x05query\x18h \x01(\tR\x05query\"\xc8\x01\n" +
	"\rRecordRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12!\n" +
	"\ftimestamp_ms\x18\x02 \x01(\x03R\vtimestampMs\x12\x1e\n" +
	"\x03uri\x18\x03 \x01(\v2\f.kfpanda.URIR\x03uri\x12\x18\n" +
	"\aservice\x18d \x01(\tR\aservice\x12'\n" +
	"\x04type\x18e \x01(\x0e2\x13.kfpanda.RecordTypeR\x04type\x12\x12\n" +
	"\x04data\x18f \x01(\fR\x04data\">\n" +
	"\x0eRecordResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x99\x02\n" +
	"\rReplayRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\aservice\x18\x02 \x01(\tR\aservice\x125\n" +
	"\x06option\x18\x03 \x01(\v2\x1d.kfpanda.ReplayRequest.OptionR\x06option\x12$\n" +
	"\x06target\x18d \x01(\v2\f.kfpanda.URIR\x06target\x123\n" +
	"\x0etarget_compare\x18e \x01(\v2\f.kfpanda.URIR\rtargetCompare\x1a=\n" +
	"\x06Option\x12\x14\n" +
	"\x05count\x18\x01 \x01(\x05R\x05count\x12\x1d\n" +
	"\n" +
	"timeout_ms\x18\x02 \x01(\x05R\ttimeoutMs\"\xbe\x04\n" +
	"\x0eReplayResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\rsuccess_count\x18d \x01(\x05R\fsuccessCount\x12!\n" +
	"\ffailed_count\x18e \x01(\x05R\vfailedCount\x12E\n" +
	"\tresponses\x18f \x03(\v2'.kfpanda.ReplayResponse.ServiceResponseR\tresponses\x12K\n" +
	"\aresults\x18g \x03(\v21.kfpanda.ReplayResponse.ServiceResponseComparableR\aresults\x1a\x83\x01\n" +
	"\x0fServiceResponse\x12\x12\n" +
	"\x04body\x18\x01 \x01(\fR\x04body\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\x04type\x18\x03 \x01(\x0e2\x13.kfpanda.RecordTypeR\x04type\x12\x19\n" +
	"\btype_str\x18\x04 \x01(\tR\atypeStr\x1a\x9b\x01\n" +
	"\x19ServiceResponseComparable\x12;\n" +
	"\x04base\x18\x01 \x01(\v2'.kfpanda.ReplayResponse.ServiceResponseR\x04base\x12A\n" +
	"\acompare\x18\x02 \x01(\v2'.kfpanda.ReplayResponse.ServiceResponseR\acompare\"?\n" +
	"\rSampleRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\"l\n" +
	"\x0eSampleResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x12\x12\n" +
	"\x04data\x18\x04 \x03(\fR\x04data\";\n" +
	"\vLogResponse\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x05R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xa7\x04\n" +
	"\n" +
	"LogRequest\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12!\n" +
	"\ftimestamp_ms\x18\x02 \x01(\x03R\vtimestampMs\x12\x18\n" +
	"\aservice\x18\x03 \x01(\tR\aservice\x12\x19\n" +
	"\blog_name\x18\x04 \x01(\tR\alogName\x12.\n" +
	"\tlog_level\x18\x05 \x01(\x0e2\x11.kfpanda.LogLevelR\blogLevel\x12\x18\n" +
	"\amessage\x18\x06 \x01(\tR\amessage\x12\x12\n" +
	"\x04file\x182 \x01(\tR\x04file\x12\x12\n" +
	"\x04line\x183 \x01(\x05R\x04line\x12\x1a\n" +
	"\bfunction\x184 \x01(\tR\bfunction\x12\x12\n" +
	"\x04host\x18d \x01(\tR\x04host\x12 \n" +
	"\venvironment\x18e \x01(\tR\venvironment\x12\x16\n" +
	"\x06region\x18f \x01(\tR\x06region\x12\x18\n" +
	"\acluster\x18g \x01(\tR\acluster\x12\x18\n" +
	"\aversion\x18h \x01(\tR\aversion\x12>\n" +
	"\bmetadata\x18\xc8\x01 \x03(\v2!.kfpanda.LogRequest.MetadataEntryR\bmetadata\x12\x15\n" +
	"\x05extra\x18\xc9\x01 \x01(\tR\x05extra\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\r\n" +
	"\vHttpRequest\"\x0e\n" +
	"\fHttpResponse\"'\n" +
	"\vEchoMessage\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage*U\n" +
	"\n" +
	"RecordType\x12\x1b\n" +
	"\x17RECORD_TYPE_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10RECORD_TYPE_HTTP\x10\x01\x12\x14\n" +
	"\x10RECORD_TYPE_GRPC\x10\x02*\x8c\x01\n" +
	"\bLogLevel\x12\x19\n" +
	"\x15LOG_LEVEL_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eLOG_LEVEL_INFO\x10\x01\x12\x12\n" +
	"\x0eLOG_LEVEL_WARN\x10\x02\x12\x13\n" +
	"\x0fLOG_LEVEL_ERROR\x10\x03\x12\x13\n" +
	"\x0fLOG_LEVEL_FATAL\x10\x04\x12\x13\n" +
	"\x0fLOG_LEVEL_DEBUG\x10\x052\xfb\x01\n" +
	"\x0eKfPandaService\x12;\n" +
	"\x06Record\x12\x16.kfpanda.RecordRequest\x1a\x17.kfpanda.RecordResponse\"\x00\x12;\n" +
	"\x06Replay\x12\x16.kfpanda.ReplayRequest\x1a\x17.kfpanda.ReplayResponse\"\x00\x12;\n" +
	"\x06Sample\x12\x16.kfpanda.SampleRequest\x1a\x17.kfpanda.SampleResponse\"\x00\x122\n" +
	"\x03Log\x12\x13.kfpanda.LogRequest\x1a\x14.kfpanda.LogResponse\"\x002\x84\x01\n" +
	"\x13KfPandaDebugService\x124\n" +
	"\x04Echo\x12\x14.kfpanda.EchoMessage\x1a\x14.kfpanda.EchoMessage\"\x00\x127\n" +
	"\x06Replay\x12\x14.kfpanda.HttpRequest\x1a\x15.kfpanda.HttpResponse\"\x002I\n" +
	"\x11KfPandaApiService\x124\n" +
	"\x03Api\x12\x14.kfpanda.HttpRequest\x1a\x15.kfpanda.HttpResponse\"\x00BMZHgithub.com/sunzhenkai/kung-fu-panda-protocols/go/service/kfpanda;kfpanda\x80\x01\x01b\x06proto3"

var (
	file_protos_service_kfpanda_kfpanda_proto_rawDescOnce sync.Once
	file_protos_service_kfpanda_kfpanda_proto_rawDescData []byte
)

func file_protos_service_kfpanda_kfpanda_proto_rawDescGZIP() []byte {
	file_protos_service_kfpanda_kfpanda_proto_rawDescOnce.Do(func() {
		file_protos_service_kfpanda_kfpanda_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_protos_service_kfpanda_kfpanda_proto_rawDesc), len(file_protos_service_kfpanda_kfpanda_proto_rawDesc)))
	})
	return file_protos_service_kfpanda_kfpanda_proto_rawDescData
}

var file_protos_service_kfpanda_kfpanda_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_protos_service_kfpanda_kfpanda_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_protos_service_kfpanda_kfpanda_proto_goTypes = []any{
	(RecordType)(0),                                  // 0: kfpanda.RecordType
	(LogLevel)(0),                                    // 1: kfpanda.LogLevel
	(*URI)(nil),                                      // 2: kfpanda.URI
	(*RecordRequest)(nil),                            // 3: kfpanda.RecordRequest
	(*RecordResponse)(nil),                           // 4: kfpanda.RecordResponse
	(*ReplayRequest)(nil),                            // 5: kfpanda.ReplayRequest
	(*ReplayResponse)(nil),                           // 6: kfpanda.ReplayResponse
	(*SampleRequest)(nil),                            // 7: kfpanda.SampleRequest
	(*SampleResponse)(nil),                           // 8: kfpanda.SampleResponse
	(*LogResponse)(nil),                              // 9: kfpanda.LogResponse
	(*LogRequest)(nil),                               // 10: kfpanda.LogRequest
	(*HttpRequest)(nil),                              // 11: kfpanda.HttpRequest
	(*HttpResponse)(nil),                             // 12: kfpanda.HttpResponse
	(*EchoMessage)(nil),                              // 13: kfpanda.EchoMessage
	(*ReplayRequest_Option)(nil),                     // 14: kfpanda.ReplayRequest.Option
	(*ReplayResponse_ServiceResponse)(nil),           // 15: kfpanda.ReplayResponse.ServiceResponse
	(*ReplayResponse_ServiceResponseComparable)(nil), // 16: kfpanda.ReplayResponse.ServiceResponseComparable
	nil, // 17: kfpanda.LogRequest.MetadataEntry
}
var file_protos_service_kfpanda_kfpanda_proto_depIdxs = []int32{
	2,  // 0: kfpanda.RecordRequest.uri:type_name -> kfpanda.URI
	0,  // 1: kfpanda.RecordRequest.type:type_name -> kfpanda.RecordType
	14, // 2: kfpanda.ReplayRequest.option:type_name -> kfpanda.ReplayRequest.Option
	2,  // 3: kfpanda.ReplayRequest.target:type_name -> kfpanda.URI
	2,  // 4: kfpanda.ReplayRequest.target_compare:type_name -> kfpanda.URI
	15, // 5: kfpanda.ReplayResponse.responses:type_name -> kfpanda.ReplayResponse.ServiceResponse
	16, // 6: kfpanda.ReplayResponse.results:type_name -> kfpanda.ReplayResponse.ServiceResponseComparable
	1,  // 7: kfpanda.LogRequest.log_level:type_name -> kfpanda.LogLevel
	17, // 8: kfpanda.LogRequest.metadata:type_name -> kfpanda.LogRequest.MetadataEntry
	0,  // 9: kfpanda.ReplayResponse.ServiceResponse.type:type_name -> kfpanda.RecordType
	15, // 10: kfpanda.ReplayResponse.ServiceResponseComparable.base:type_name -> kfpanda.ReplayResponse.ServiceResponse
	15, // 11: kfpanda.ReplayResponse.ServiceResponseComparable.compare:type_name -> kfpanda.ReplayResponse.ServiceResponse
	3,  // 12: kfpanda.KfPandaService.Record:input_type -> kfpanda.RecordRequest
	5,  // 13: kfpanda.KfPandaService.Replay:input_type -> kfpanda.ReplayRequest
	7,  // 14: kfpanda.KfPandaService.Sample:input_type -> kfpanda.SampleRequest
	10, // 15: kfpanda.KfPandaService.Log:input_type -> kfpanda.LogRequest
	13, // 16: kfpanda.KfPandaDebugService.Echo:input_type -> kfpanda.EchoMessage
	11, // 17: kfpanda.KfPandaDebugService.Replay:input_type -> kfpanda.HttpRequest
	11, // 18: kfpanda.KfPandaApiService.Api:input_type -> kfpanda.HttpRequest
	4,  // 19: kfpanda.KfPandaService.Record:output_type -> kfpanda.RecordResponse
	6,  // 20: kfpanda.KfPandaService.Replay:output_type -> kfpanda.ReplayResponse
	8,  // 21: kfpanda.KfPandaService.Sample:output_type -> kfpanda.SampleResponse
	9,  // 22: kfpanda.KfPandaService.Log:output_type -> kfpanda.LogResponse
	13, // 23: kfpanda.KfPandaDebugService.Echo:output_type -> kfpanda.EchoMessage
	12, // 24: kfpanda.KfPandaDebugService.Replay:output_type -> kfpanda.HttpResponse
	12, // 25: kfpanda.KfPandaApiService.Api:output_type -> kfpanda.HttpResponse
	19, // [19:26] is the sub-list for method output_type
	12, // [12:19] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_protos_service_kfpanda_kfpanda_proto_init() }
func file_protos_service_kfpanda_kfpanda_proto_init() {
	if File_protos_service_kfpanda_kfpanda_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_protos_service_kfpanda_kfpanda_proto_rawDesc), len(file_protos_service_kfpanda_kfpanda_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_protos_service_kfpanda_kfpanda_proto_goTypes,
		DependencyIndexes: file_protos_service_kfpanda_kfpanda_proto_depIdxs,
		EnumInfos:         file_protos_service_kfpanda_kfpanda_proto_enumTypes,
		MessageInfos:      file_protos_service_kfpanda_kfpanda_proto_msgTypes,
	}.Build()
	File_protos_service_kfpanda_kfpanda_proto = out.File
	file_protos_service_kfpanda_kfpanda_proto_goTypes = nil
	file_protos_service_kfpanda_kfpanda_proto_depIdxs = nil
}
